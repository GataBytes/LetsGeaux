generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int          @id @default(autoincrement())
  googleId   String       @unique
  username   String       @db.VarChar(50)
  email      String       @db.VarChar(50)
  isVerified Boolean
  phoneNum   String       @db.VarChar(10)
  isNotified Boolean
  reminder   reminder[]
  post       post[]
  route      route[]
  vote       vote[]
  image      image[]
  suggestion suggestion[]
  group      group?       @relation(fields: [groupId], references: [id])
  groupId    Int?
}

model suggestion {
  id            Int        @id @default(autoincrement())
  title         String     @db.VarChar(120)
  description   String     @db.MediumText
  upVotes       Int
  downVotes     Int
  timeAvailable DateTime
  image         String     @db.TinyText
  phoneNum      String     @db.VarChar(15)
  address       String     @db.VarChar(50)
  user          user?      @relation(fields: [userId], references: [id])
  cost          Int
  created_at    DateTime   @default(now())
  activity      activity[]
  userId        Int?
  location      location[]
}

model itinerary {
  id         Int      @id @default(autoincrement())
  creator_id Int
  member_id  Int
  name       String   @db.VarChar(50)
  notes      String   @db.VarChar(150)
  begin      DateTime
  end        DateTime
  upVotes    Int
  downVotes  Int
  createdAt  DateTime
}

model activity {
  id           Int         @id @default(autoincrement())
  creatorId    Int
  participant  Int
  suggestion   suggestion? @relation(fields: [suggestionId], references: [id])
  name         String      @db.VarChar(50)
  description  String      @db.VarChar(200)
  notes        String      @db.VarChar(150)
  location     location?   @relation(fields: [locationId], references: [id])
  suggestionId Int?
  locationId   Int?
  reminder     reminder[]
  image        image[]
}

model location {
  id           Int         @id @default(autoincrement())
  name         String      @db.VarChar(50)
  description  String      @db.VarChar(255)
  address      String      @db.VarChar(50)
  suggestion   suggestion? @relation(fields: [suggestionId], references: [id])
  latitude     Decimal
  longitude    Decimal
  activity     activity[]
  suggestionId Int?
}

model route {
  id             Int      @id @default(autoincrement())
  user           user?    @relation(fields: [userId], references: [id])
  origin         String
  destination    String
  timeToLocation DateTime
  userId         Int?
}

model vote {
  id            Int     @id @default(autoincrement())
  user          user?   @relation(fields: [userId], references: [id])
  vote_polarity Boolean
  vote_topic    String  @db.VarChar(25)
  voted_item_id Int
  userId        Int?
}

model interest {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(25)
}

model group {
  id           Int      @id @default(autoincrement())
  itinerary_id Int      @unique
  activity_id  Int
  user_id      user[]
  budget       budget[]
}

model reminder {
  id           Int       @id @default(autoincrement())
  user         user?     @relation(fields: [userId], references: [id])
  activity     activity? @relation(fields: [activityId], references: [id])
  call_time    DateTime
  call_message String    @db.VarChar(40)
  userId       Int?
  activityId   Int?
}

model image {
  id         Int       @id @default(autoincrement())
  user       user?     @relation(fields: [userId], references: [id])
  url        String    @db.TinyText
  activity   activity? @relation(fields: [activityId], references: [id])
  notes      String    @db.VarChar(255)
  userId     Int?
  activityId Int?
}

model budget {
  id                Int        @id @default(autoincrement())
  category          category[]
  group             group?     @relation(fields: [groupItinerary_id], references: [itinerary_id])
  spent             Decimal
  totalBudget       Decimal
  notes             String     @db.VarChar(255)
  created_at        DateTime
  updated_at        DateTime
  groupItinerary_id Int?
}

model category {
  id        Int      @id @default(autoincrement())
  budget    budget?  @relation(fields: [budgetId], references: [id])
  name      String   @db.VarChar(30)
  allocated Decimal
  spent     Decimal
  notes     String?  @db.VarChar(150)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  budgetId  Int?
}

model post {
  id           Int      @id @default(autoincrement())
  title        String   @db.Text
  content      String   @db.Text
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  author       user?    @relation(fields: [authorId], references: [id])
  suggestionId Int?
  location     String?
  latitude     Decimal?
  longitude    Decimal?
  category     String?
  Tags         String?
  authorId     Int?
}

model chatHistory {
  id          Int      @id @default(autoincrement())
  userId      Int?
  userMessage String   @db.Text
  botResponse String   @db.LongText
  timeStamp   DateTime @default(now())
  sessionId   String?  @db.VarChar(100)
}
